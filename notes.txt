**************install steps :*************
git clone https://github.com/felixchambragne/auto-DMX
token : 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
git config --global credential.helper store
git pull
sudo apt install -y python3-pip
pip install flask

*********************OLA setup*********************
sudo apt-get install -y ola
sudo apt-get install -y ola-python
sudo adduser pi olad
for ix in /etc/ola/*; do echo "-> $(basename $ix)"; grep enabled $ix; done
grep -rl "enabled = true" /etc/ola/* | while read f; do echo "$(basename $f) -> setting enabled = false;"; sudo sed -i 's/enabled = true/enabled = false/' $f; done
sudo nano /etc/ola/ola-ftdidmx.conf

sudo killall -s SIGHUP olad
ola_dev_info | grep FT232R
ola_patch -d 1 -p 1 -u 1

**************************Access Point :*****************
git clone https://github.com/idev1/rpihotspot.git
cd rpihotspot
sudo chmod +x setup-network.sh
sudo ./setup-network.sh --install --ap-ssid="" --ap-password="" --ap-password-encrypt --ap-country-code="FR" --ap-ip-address="192.168.220.1" --wifi-interface="wlan0"
sudo iw dev wlan0 interface add uap0 type __ap

******************Setup Microphone*************
sudo raspi-config
--> enable i2c
pip install smbus
sudo apt-get install i2c-tools
test i2c : sudo i2cdetect -y 0 ou sudo i2cdetect -y 1
sudo apt install python3-pyaudio

***********Autres install**************
pip install keyboard

*****************Au demarrage*****************
sudo nano /etc/systemd/system/uap0.service
    [Unit]
    Description=Create uap0 interface

    [Service]
    ExecStart=/sbin/iw dev wlan0 interface add uap0 type __ap

    [Install]
    WantedBy=multi-user.target

sudo systemctl daemon-reload
sudo systemctl enable uap0.service
sudo systemctl daemon-reload
sudo reboot


***************to do :***********
uninstall xrdp
uninstall git
uninstall dkms

optimisé les import dans le python
enlevé le debug mode sur flask


************Prompt ChatGPT*************
Je suis en train de créer des programmes DMX en python. Pour définir des programmes de lumière, j'ai besoin d'un fichier json.
Je vais te demander au fur et à mesure de me générer des morceaux de fichiers json correspondant à un programme de lumière.
Il y a une forme bien particulière à respecté pour que le programme python comprenne et execute bien le programme.
Tout d'abord, chaque programme à un nom "name" et 1 ou 2 couleurs dans une liste "colors" ces couleurs ne sont pas les couleurs des projecteurs mais les couleurs d'affichage sur l'interface utilisateur.
Il y a ensuite une liste "steps" qui correspond aux différente étapes du programme, le programme passe à l'étape suivante au bout d'un nombre de beats : "duration", car les beats de la musique sont détectés pour que les lumières soient dans le rythme.
Il y a ensuite uniquement 2 types de projecteur "pixbar" et "washbeam" qui ont chacun leurs attributs. Il y a 4 pixbar et 6 washbeam dans la plus grosse configuration.
"pixbar" à "color", "intensity", "strob".
"washbeam" à "color", "intensity", "strob", "position", "zoom".
color à "values" qui est une liste de couleur avec un nom en majuscules, on peut ajouter du fondu avec "fade" un entier correspondant au temps en secondes,
l'attribut "type" à plusieurs possibilités dont "linear", "random", "uniform", "static". 
"intensity" à les même attributs que "color" mais au lieu de mettre des couleurs dans la liste, ce sont des valeurs entières entre 0 et 255, on peut ajouter du fondu avec "fade" et un "type".
"strob" fait la même chose avec des true, false dans "values" et il n'y a pas de fade et il y a un "type".
"zoom" fait la même chose, ce sont des valeurs entières entre 0 et 255 et il n'y a pas de fade et il y a un "type".
"position" contient une liste "values" de couple pan tilt, l'attribut "type" est disponible mais il ajoute une nouvelle valeur possible uniquement pour "position" : c'est "shape".
"shape" peut avoir comme valeur : "random", "circle". et ces "shape" sont limité par les attributs "pan_limit" et "tilt_limit" qui sont des listes [min, max], "pan_limit" et "tilt_limit" ne sont valables que pour le "type" : "shape". et "values" n'est pas valable pour la valeur "shape".
le dernier attribut de "position" est "speed" qui détermine la vitesse de pan et tilt, c'est une valeur entière entre 0 et 255.

les "types" possible :
"linear" s'actualise à chaque beat. Chaque projecteur prends la valeur suivante et fonctionne de la sorte : 
def linear_animation(self, index, values):
    return values[(self.beat_count + index) % len(values)] 
"random" s'actualise à chaque beat. Chaque projecteur prends une valeur aléatoire dans "values".
"uniforme" s'actualise à chaque beat. Tout les projecteurs ont le même état et lors de l'actualisation, ils passent tous à l'état suivant :
def uniform_animation(self, values):
    return values[self.beat_count % len(values)]
"static" correspond à un état qui ne s'actualise pas, chaque projecteur prends sa valeur correspondante dans la liste : 
def set_static(self, index, values):
    return values[index % len(values)]

Voici l'exemple d'un programme type electro de couleurs bleu et blanc avec du strob à des moments et des mouvements rapides. Il y a deux "steps" de courte "duration" dans ce programme pour créer des variations mais les autres programmes peuvent en contenir 1 ou 2 ou plusieurs.
"name": "Bleu Blanc",
                    "colors": ["#0000FF", "#FFFFFF"],
                    "steps": [
                        {
                            "duration": 16,
                            "pixbar": {
                                "color": {
                                    "values": ["WHITE", "BLUE", "BLUE", "BLUE"],
                                    "fade": 0,
                                    "type": "linear"
                                },
                                "intensity": {
                                    "values": [255, 0],
                                    "fade": 1,
                                    "type": "linear"
                                },
                                "strob": {
                                    "values": [false],
                                    "type": "static"
                                }
                            },
                            "washbeam": {
                                "color": {
                                    "values": ["BLUE"],
                                    "fade": 0,
                                    "type": "static"
                                },
                                "intensity": {
                                    "values": [255],
                                    "fade": 0,
                                    "type": "static"
                                },
                                "strob": {
                                    "values": [true, false, false, false, false, false],
                                    "type": "linear"
                                },
                                "position": {
                                    "values": [[50, 50]],
                                    "fade": 0,
                                    "type": "static",
                                    "pan_limit": [0, 0],
                                    "tilt_limit": [0, 0]
                                },
                                "zoom": {
                                    "values": [100],
                                    "type": "static"
                                }
                            } 
                        },
                        {
                            "duration": 16,
                            "pixbar": {     
                                "color": {
                                    "values": ["WHITE", "BLUE"],
                                    "fade": 0,
                                    "type": "linear"
                                },
                                "intensity": {
                                    "values": [255],
                                    "fade": 0,
                                    "type": "static"
                                },
                                "strob": {
                                    "values": [true, false, true, false],
                                    "type": "random"
                                }
                            },
                            "washbeam": {
                                "color": {
                                    "values": ["WHITE", "BLUE"],
                                    "fade": 1,
                                    "type": "uniform"
                                },
                                "intensity": {
                                    "values": [255],
                                    "fade": 0,
                                    "type": "static"
                                },
                                "strob": {
                                    "values": [false],
                                    "type": "static"
                                },
                                "position": {
                                    "values": [],
                                    "type": "shape",
                                    "shape": "random",
                                    "speed": 255,
                                    "pan_limit": [20, 120],
                                    "tilt_limit": [20, 120]
                                },
                                "zoom": {
                                    "values": [255],
                                    "type": "static"
                                }
                            }
                            
                        }
                    ]
Je te rappel que ce sont des projecteurs LED et donc que les couleurs "BLACK", "GREY", "BROWN" n'ont pas de sens. Mais l'intensity peut etre modifié pour varier la luminosité au lieu de mettre "BLACK"
Pour rappel, dans un programme qui fait :       
"color": {
    "values": ["GREEN", "GREEN", "GREEN"],
    "fade": 0,
    "type": "linear"
}, 
peut être simplifié en : 
"color": {
    "values": ["GREEN"],
    "fade": 0,
    "type": "static"
}, Cela fait la même chose.
Dit moi si tu as tout compris ou si il te manque des informations. Je te dirais quel type de programme générer juste après.
